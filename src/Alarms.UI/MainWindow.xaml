<Window x:Name="window" x:Class="Alarms.UI.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Alarms.UI"
        mc:Ignorable="d"
        Title="Timer" Height="270" Width="600"
        WindowStyle="None"
        ResizeMode="CanResizeWithGrip"
        AllowsTransparency="True"
        d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
        Background="#1e1e1e"
        Icon="./icon.png"
        MinHeight="270"
        MinWidth="540"
        MaxHeight="270" 
        Loaded="window_Loaded">
    <Window.Resources>
        <Style x:Key="TimeLeft" TargetType="TextBlock">
            <Setter Property="FontSize" Value="50"/>
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0"/>
            <Setter Property="Foreground" Value="#f1f1f1"/>
        </Style>
        <Style TargetType="Button">
            <Setter Property="MaxWidth" Value="500"/>
            <Setter Property="Padding" Value="10"/>
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="#f1f1f1"/>
            <Setter Property="Background" Value="#1e1e1e"/>
        </Style>
        <Style TargetType="TextBox">
            <Setter Property="MinWidth" Value="38"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Padding" Value="5 2"/>
            <Setter Property="Foreground" Value="#f1f1f1"/>
            <Setter Property="Background" Value="#1e1e1e"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="InputLabel">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="VerticalAlignment" Value="Bottom"/>
            <Setter Property="Foreground" Value="#f1f1f1"/>
            <Setter Property="Margin" Value="3 0 10 0"/>
        </Style>
        <Style TargetType="TextBlock" x:Key="TimesUp">
            <Setter Property="FontSize" Value="30"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="Margin" Value="0 20"/>
            <Setter Property="Foreground" Value="#c3602c" />
        </Style>
        <Style TargetType="Button" x:Key="Close">
            <Setter Property="Background" Value="#FFDC4242"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="Padding" Value="10 5"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Style.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="Foreground" Value="#ffffff"/>
                    <Setter Property="TextAlignment" Value="Justify"/>
                </Style>
            </Style.Resources>
        </Style>
        <Style TargetType="Border" x:Key="InputPanelStyle">
            <Setter Property="Padding" Value="0 20 0 20"/>
            <Setter Property="Background" Value="Transparent"/>
            <Style.Resources>
                <Style TargetType="StackPanel">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                    <Setter Property="Orientation" Value="Horizontal"/>
                </Style>
            </Style.Resources>
        </Style>

        <local:TimesUpToVisibilityConverter x:Key="TimesUpToVisibilityConverter" />
        <Storyboard x:Key="BackgroundBlink" RepeatBehavior="8x">
            <ColorAnimationUsingKeyFrames Storyboard.TargetName="window" Storyboard.TargetProperty="(Control.Background).(SolidColorBrush.Color)">
                <EasingColorKeyFrame KeyTime="00:00:00.7" Value="#b33e3e"/>
                <EasingColorKeyFrame KeyTime="00:00:01.0" Value="#1e1e1e"/>
            </ColorAnimationUsingKeyFrames>
        </Storyboard>
        <!--Hide input-->
        <KeyTime x:Key="InputAnimationTime">00:00:00.3</KeyTime>
        <Storyboard x:Key="HideInput" >
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(Control.BorderThickness)">
                <EasingThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(Control.BorderThickness)">
                <EasingThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(Control.Padding)">
                <EasingThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(Control.Padding)">
                <EasingThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(FrameworkElement.MinWidth)">
                <EasingDoubleKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="3"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(FrameworkElement.MinWidth)">
                <EasingDoubleKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="3"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InputPanel" Storyboard.TargetProperty="(Border.Padding)">
                <EasingThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0,20,0,0"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="ShowInput" >
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(Control.BorderThickness)">
                <SplineThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="1,1,1,1"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(Control.BorderThickness)">
                <SplineThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="1,1,1,1"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(Control.Padding)">
                <SplineThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="5,2,5,2"/>
            </ThicknessAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(Control.Padding)">
                <SplineThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="5,2,5,2"/>
            </ThicknessAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="MinutesTextBox" Storyboard.TargetProperty="(FrameworkElement.MinWidth)">
                <SplineDoubleKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="38"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetName="SecondsTextBox" Storyboard.TargetProperty="(FrameworkElement.MinWidth)">
                <SplineDoubleKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="38"/>
            </DoubleAnimationUsingKeyFrames>
            <ThicknessAnimationUsingKeyFrames Storyboard.TargetName="InputPanel" Storyboard.TargetProperty="(Border.Padding)">
                <SplineThicknessKeyFrame KeyTime="{StaticResource InputAnimationTime}" Value="0,20,0,20"/>
            </ThicknessAnimationUsingKeyFrames>
        </Storyboard>
    </Window.Resources>
    <Grid Name="background"  >
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="1"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Button Grid.Column="2" Style="{StaticResource Close}" Command="{Binding CloseCommand}">
            <TextBlock>X</TextBlock>
        </Button>
        <!--Timer-->
        <Grid Margin="20 40" Grid.Row="0">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding TimeLeft, StringFormat='{}{0:hh\\:mm\\:ss}'}" Style="{StaticResource TimeLeft}"/>
            <!--Input-->
            <Border Grid.Row="1" Name="InputPanel" Style="{StaticResource InputPanelStyle}" MouseEnter="InputPanel_MouseEnter" MouseLeave="InputPanel_MouseLeave">
                <StackPanel>
                    <TextBox Name="MinutesTextBox" Text="{Binding Minutes}" MouseWheel="MinutesTextBox_MouseWheel" PreviewTextInput="NumberBox_PreviewTextInput"/>
                    <TextBlock Style="{StaticResource InputLabel}">m</TextBlock>
                    <TextBox Name="SecondsTextBox" Text="{Binding Seconds}" MouseWheel="SecondsTextBox_MouseWheel" PreviewTextInput="NumberBox_PreviewTextInput"/>
                    <TextBlock Style="{StaticResource InputLabel}">s</TextBlock>
                </StackPanel>
            </Border>
            <Button Grid.Row="2" VerticalAlignment="Bottom" Template="{DynamicResource ButtonTemplate}" Command="{Binding StartClockCommand}">Start</Button>
        </Grid>
        <Rectangle Grid.Column="1"  Fill="White" Margin="0 50" />
        <!--Stopwatch-->
        <Grid Margin="20 40" Grid.Column="2">
            <TextBlock Text="{Binding StopwatchTimePassed, StringFormat='{}{0:hh\\:mm\\:ss}'}" Style="{StaticResource TimeLeft}"/>
            <Grid VerticalAlignment="Bottom">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Button Template="{DynamicResource ButtonTemplate}" Command="{Binding StartStopwatchCommand}" >Start</Button>
                <Button Template="{DynamicResource ButtonTemplate}" Command="{Binding StopStopwatchCommand}" Grid.Column="1">Stop</Button>
            </Grid>
        </Grid>
    </Grid>
</Window>
